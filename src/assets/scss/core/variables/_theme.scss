// Create Material custom theme
@use '@angular/material' as mat;

$min-contrast-ratio: 2.5;

// Material Theming
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

// Global ---------------------------------
$app-success: mat.define-palette(mat.$green-palette, 700);
$app-warning: mat.define-palette(mat.$orange-palette, 700);
$app-yellow: mat.define-palette(mat.$yellow-palette, 700);
$app-purple: mat.define-palette(mat.$deep-purple-palette, 700);
$app-grey: mat.define-palette(mat.$grey-palette, 700);
$app-brown: mat.define-palette(mat.$brown-palette, 700);
$app-blue-grey: mat.define-palette(mat.$blue-grey-palette, 700);
$app-deep-orange: mat.define-palette(mat.$deep-orange-palette, 700);
$app-lime: mat.define-palette(mat.$lime-palette, 700);
$app-light-green: mat.define-palette(mat.$light-green-palette, 700);
$app-teal: mat.define-palette(mat.$teal-palette, 700);
$app-cyan: mat.define-palette(mat.$cyan-palette, 700);
$app-indigo: mat.define-palette(mat.$indigo-palette, 700);
$app-pink: mat.define-palette(mat.$pink-palette, 700);

// Light Theme ---------------------------------
// Define colors
$app-primary: mat.define-palette(mat.$blue-palette, 700);
$app-accent: mat.define-palette(mat.$blue-palette, 500);
$app-danger: mat.define-palette(mat.$red-palette, 700);
// Create the theme
$app-theme: mat.define-light-theme((
  color: (
    primary: $app-primary,
    accent: $app-accent,
    warn: $app-danger,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));
// Apply theme
@include mat.all-legacy-component-themes($app-theme);
// Bg/Fg
$app-foreground: map-get($app-theme, foreground);
$app-background: map-get($app-theme, background);
// End of Light Theme ---------------------------------

// Dark Theme ---------------------------------
// Define colors
$dark-primary: mat.define-palette(mat.$grey-palette, 600);
$dark-accent: mat.define-palette(mat.$grey-palette, A200, A100, A400);
$dark-danger: mat.define-palette(mat.$red-palette, 300);
// Create the theme
$dark-theme: mat.define-light-theme((
  color: (
    primary: $dark-primary,
    accent: $dark-accent,
    warn: $dark-danger,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));
// Other
$dark-success: mat.define-palette(mat.$green-palette, 300);
$dark-warning: mat.define-palette(mat.$orange-palette, 300);
// Bg/Fg
$dark-foreground: map-get($dark-theme, foreground);
$dark-background: map-get($dark-theme, background);
// End of Dark Theme ---------------------------------

// Apply the dark theme only when the `.dark-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
// https://material.angular.io/guide/theming-your-components
.dark-theme {
  // Apply theme
  @include mat.all-legacy-component-colors($dark-theme);
}
